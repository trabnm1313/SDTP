pipeline {
    agent any
    environment{
        SECRET_FILE = credentials('team2-secret')
    }

    stages {
        stage('Pull Code') {
            steps {
                cleanWs()
                git branch: 'main', url: 'https://github.com/trabnm1313/SDTP.git'
            }
        }
        stage('Download Dependencies') {
            steps {
                dir("backend"){
                    sh 'npm install'
                }
            }
        }
        stage('Unit Test') {
            steps {
                dir("backend"){
                    sh 'npm run unit_test'
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'reports', reportFiles: 'report.html', reportName: 'HTML Report', reportTitles: ''])
                }
            }
        }
        stage('Component Test') {
            steps {
                dir("backend"){
                    sh 'cp ${SECRET_FILE} key.json'
                    sh 'npm run component_test'
                    sh 'rm key.json'
                }
            }
        }

        stage('E2E test') {
            steps {
                echo 'npm e2e_test'
            }
        }
        stage('Deploy') {
            steps {
                withCredentials([string(credentialsId: 'team2-backend-docker', variable: 'team2sshPass')]) {
                    script {
                        def remote = [:]
                        remote.host = '159.223.45.216'
                        remote.name = 'team2-ssh'
                        remote.user = 'root'
                        remote.password = "${team2sshPass}"
                        remote.allowAnyHosts = true

                        sshCommand remote: remote, command: "git clone https://github.com/trabnm1313/SDTP.git"
                        sshCommand remote: remote, command: "docker-compose -f SDTP/dockerCompose-backend.yml up -d"
                        sshCommand remote: remote, command: "rm -r SDTP"
                    }
                }
            }
        }
        stage('Notification') {
            steps {
                echo 'Everything is OK'
            }
        }
    }
}
